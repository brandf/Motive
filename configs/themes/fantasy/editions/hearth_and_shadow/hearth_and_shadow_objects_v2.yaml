# Hearth and Shadow edition objects - Blackwater Town (Sim V2 Enhanced)
# This file showcases the new sim_v2 features: visibility, triggers, affordances, and status effects

object_types:
  notice_board:
    id: notice_board
    name: Notice Board
    description: A wooden board covered with various notices, posters, and announcements.
    properties:
      readable: true
      text: "Various town announcements and missing person posters are posted here."
      # Sim V2: Visibility and search mechanics
      visible: true
      searchable: false
      # Sim V2: Affordances - can be updated with new notices
      affordances:
        - action: "update_notice"
          condition: "readable == true"
          effects:
            - set_property: {target: "self", property: "text", value: "Updated with new information about the cult."}
          description: "Update the notice board with new information"

  broken_fountain:
    id: broken_fountain
    name: Broken Fountain
    description: A once-beautiful stone fountain, now cracked and dry.
    properties:
      immovable: true
      size: large
      visible: true
      searchable: true
      # Sim V2: Hidden compartment that can be discovered
      hidden_compartment: false
      compartment_contents: "cult_symbol"
      # Sim V2: Triggers - fountain reacts to certain conditions
      triggers:
        - trigger_id: "fountain_repair"
          condition: "has_repair_tools == true AND water_source_nearby == true"
          effects:
            - set_property: {target: "self", property: "description", value: "A beautifully restored fountain, water flowing freely."}
            - set_property: {target: "self", property: "hidden_compartment", value: true}
          undo_effects:
            - set_property: {target: "self", property: "description", value: "A once-beautiful stone fountain, now cracked and dry."}

  torch:
    id: torch
    name: Torch
    description: A wooden torch that can provide light when lit.
    properties:
      readable: true
      text: "This torch can provide light when lit."
      is_lit: false
      fuel: 100
      visible: true
      searchable: false
      # Sim V2: Affordances - dynamic actions based on state
      affordances:
        - action: "light"
          condition: "is_lit == false AND fuel > 0"
          effects:
            - set_property: {target: "self", property: "is_lit", value: true}
            - set_property: {target: "self", property: "description", value: "A burning torch providing warm light."}
          description: "Light the torch"
        - action: "extinguish"
          condition: "is_lit == true"
          effects:
            - set_property: {target: "self", property: "is_lit", value: false}
            - set_property: {target: "self", property: "description", value: "A wooden torch that can provide light when lit."}
          description: "Extinguish the torch"
        - action: "refuel"
          condition: "fuel < 50"
          effects:
            - set_property: {target: "self", property: "fuel", value: 100}
          description: "Refuel the torch"
      # Sim V2: Triggers - fuel consumption over time
      triggers:
        - trigger_id: "fuel_consumption"
          condition: "is_lit == true"
          effects:
            - set_property: {target: "self", property: "fuel", value: "fuel - 1"}
            - trigger: {trigger_id: "torch_extinguish", condition: "fuel <= 0"}
        - trigger_id: "torch_extinguish"
          condition: "fuel <= 0"
          effects:
            - set_property: {target: "self", property: "is_lit", value: false}
            - set_property: {target: "self", property: "description", value: "A burnt-out torch, no longer providing light."}

  hidden_key:
    id: hidden_key
    name: Hidden Key
    description: A small, ornate key that seems to glow faintly.
    properties:
      visible: false  # Sim V2: Hidden by default
      searchable: true  # Sim V2: Can be discovered through search
      key_type: "ornate"
      magical: true
      # Sim V2: Affordances - key can unlock things
      affordances:
        - action: "examine_key"
          condition: "visible == true"
          effects:
            - set_property: {target: "self", property: "description", value: "A small, ornate key that glows with magical energy. It seems to pulse with power."}
          description: "Examine the key closely"
        - action: "use_key"
          condition: "visible == true"
          effects:
            - emit_event: {event: "key_used", data: {key_type: "ornate", magical: true}}
          description: "Use the key to unlock something"

  cult_symbol:
    id: cult_symbol
    name: Cult Symbol
    description: A dark, unsettling symbol carved into the surface.
    properties:
      visible: false  # Sim V2: Hidden until discovered
      searchable: true
      evil_energy: true
      corrupting: true
      # Sim V2: Status effects - exposure causes corruption
      status_effects:
        - effect_id: "corruption"
          condition: "visible == true"
          duration: 5
          effects:
            - set_property: {target: "character", property: "corruption_level", value: "corruption_level + 1"}
            - set_property: {target: "character", property: "description", value: "You feel a dark presence corrupting your soul."}
      # Sim V2: Triggers - symbol reacts to presence
      triggers:
        - trigger_id: "symbol_activation"
          condition: "character_nearby == true AND evil_energy == true"
          effects:
            - set_property: {target: "self", property: "visible", value: true}
            - emit_event: {event: "cult_symbol_discovered", data: {location: "fountain", evil_level: "high"}}

  magical_chest:
    id: magical_chest
    name: Magical Chest
    description: A ornate chest that seems to pulse with magical energy.
    properties:
      visible: true
      searchable: false
      locked: true
      magical_lock: true
      key_required: "ornate_key"
      # Sim V2: Affordances - chest can be opened with right key
      affordances:
        - action: "open_chest"
          condition: "locked == false"
          effects:
            - set_property: {target: "self", property: "description", value: "An open magical chest, its contents revealed."}
            - spawn_entity: {entity_type: "cult_artifact", location: "chest_contents"}
          description: "Open the magical chest"
        - action: "unlock_chest"
          condition: "locked == true AND has_key == true"
          effects:
            - set_property: {target: "self", property: "locked", value: false}
            - emit_event: {event: "chest_unlocked", data: {chest_type: "magical"}}
          description: "Unlock the chest with the ornate key"
      # Sim V2: Triggers - chest reacts to key proximity
      triggers:
        - trigger_id: "key_proximity"
          condition: "ornate_key_nearby == true AND locked == true"
          effects:
            - set_property: {target: "self", property: "description", value: "The magical chest glows brighter as it senses the presence of its key."}

  cult_artifact:
    id: cult_artifact
    name: Cult Artifact
    description: A dark, twisted artifact that pulses with evil energy.
    properties:
      visible: true
      searchable: false
      evil_power: 10
      corrupting: true
      # Sim V2: Status effects - artifact causes corruption
      status_effects:
        - effect_id: "artifact_corruption"
          condition: "in_inventory == true"
          duration: -1  # Permanent until removed
          effects:
            - set_property: {target: "character", property: "corruption_level", value: "corruption_level + 2"}
            - set_property: {target: "character", property: "evil_alignment", value: true}
      # Sim V2: Affordances - artifact can be destroyed
      affordances:
        - action: "destroy_artifact"
          condition: "holy_weapon == true"
          effects:
            - set_property: {target: "self", property: "visible", value: false}
            - emit_event: {event: "artifact_destroyed", data: {evil_power: 10}}
            - set_property: {target: "character", property: "corruption_level", value: "corruption_level - 5"}
          description: "Destroy the evil artifact with a holy weapon"

  bar:
    id: bar
    name: Bar
    description: A long wooden bar where drinks are served.
    properties:
      immovable: true
      size: large
      visible: true
      searchable: false
      # Sim V2: Affordances - bar can be used for information
      affordances:
        - action: "ask_bartender"
          condition: "bartender_present == true"
          effects:
            - emit_event: {event: "bartender_info", data: {topic: "cult", reliability: "medium"}}
          description: "Ask the bartender about recent events"
        - action: "search_bar"
          condition: "visible == true"
          effects:
            - set_property: {target: "self", property: "searchable", value: true}
            - spawn_entity: {entity_type: "hidden_note", location: "bar_hidden"}
          description: "Search behind the bar for hidden items"

  hidden_note:
    id: hidden_note
    name: Hidden Note
    description: A crumpled piece of paper with cryptic writing.
    properties:
      visible: false  # Sim V2: Hidden until bar is searched
      searchable: false
      readable: true
      text: "The cult meets at the old mill. Look for the symbol of the twisted tree."
      # Sim V2: Affordances - note can be read
      affordances:
        - action: "read_note"
          condition: "visible == true AND readable == true"
          effects:
            - emit_event: {event: "note_read", data: {content: "cult_location", location: "old_mill"}}
          description: "Read the hidden note"

  suspicious_character:
    id: suspicious_character
    name: Suspicious Character
    description: A figure who seems to be watching everything carefully.
    properties:
      immovable: true
      size: medium
      visible: true
      searchable: false
      suspicious_level: 5
      # Sim V2: Triggers - character reacts to player actions
      triggers:
        - trigger_id: "character_alert"
          condition: "player_investigating == true AND suspicious_level > 3"
          effects:
            - set_property: {target: "self", property: "description", value: "The suspicious character notices your interest and quickly disappears into the shadows."}
            - set_property: {target: "self", property: "visible", value: false}
            - emit_event: {event: "suspicious_character_fled", data: {location: "tavern"}}
      # Sim V2: Affordances - character can be questioned
      affordances:
        - action: "question_character"
          condition: "visible == true"
          effects:
            - emit_event: {event: "character_response", data: {response: "evasive", suspicion_increase: 1}}
          description: "Question the suspicious character"
