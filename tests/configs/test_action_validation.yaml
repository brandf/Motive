# Test configuration for action validation tests
# This is a standalone config that doesn't depend on main game configs

id: test_action_validation
name: Test Action Validation

# Game settings
game_settings:
  num_rounds: 1
  manual: "../../MANUAL.md"
  initial_ap_per_turn: 20

# Define theme and edition information directly
theme_id: test_theme
theme_name: Test Theme
edition_id: test_edition
edition_name: Test Edition

# Define all actions directly (no includes)
actions:
  look:
    id: look
    name: look
    description: Look around.
    cost: 10
    category: observation
    parameters:
      - name: target
        type: string
        description: What to look at
        optional: true
    effects:
      - type: code_binding
        function_module: motive.hooks.core_hooks
        function_name: look_at_target
        observers: ["player"]

  say:
    id: say
    name: say
    description: Say something.
    cost: 10
    category: communication
    parameters:
      - name: phrase
        type: string
        description: What to say
    effects:
      - type: code_binding
        function_module: motive.hooks.core_hooks
        function_name: handle_say_action
        observers: ["player", "room_characters"]

  help:
    id: help
    name: help
    description: Get help.
    cost: 1
    category: system
    parameters:
      - name: category
        type: string
        description: Category to get help for
        optional: true
    effects:
      - type: code_binding
        function_module: motive.hooks.core_hooks
        function_name: generate_help_message
        observers: ["player"]

  move:
    id: move
    name: move
    description: Move in a direction.
    cost: 10
    category: movement
    parameters:
      - name: direction
        type: string
        description: Direction to move
    requirements:
      - type: exit_exists
        value: true
    effects:
      - type: code_binding
        function_module: motive.hooks.core_hooks
        function_name: handle_move_action
        observers: ["player", "room_characters", "adjacent_rooms_characters"]

  pickup:
    id: pickup
    name: pickup
    description: Pick up an object.
    cost: 10
    category: inventory
    parameters:
      - name: object_name
        type: string
        description: Name of object to pick up
    requirements:
      - type: object_in_room
        value: true
      - type: object_possession_allowed
        value: true
    effects:
      - type: code_binding
        function_module: motive.hooks.core_hooks
        function_name: handle_pickup_action
        observers: ["player", "room_characters"]

# Define rooms directly
rooms:
  test_room:
    id: test_room
    name: Test Room
    description: A simple test room for action validation
    exits:
      north: test_room_2
    objects:
      test_object:
        object_type_id: test_object
        name: Test Object
        description: A simple test object
        current_room_id: test_room
    tags: ["test"]
    properties: {}

  test_room_2:
    id: test_room_2
    name: Test Room 2
    description: Another test room
    exits:
      south: test_room
    objects: {}
    tags: ["test"]
    properties: {}

# Define object types directly
object_types:
  test_object:
    id: test_object
    name: Test Object
    description: A simple test object
    tags: ["portable", "test"]
    properties:
      value: 42

# Define character types directly
character_types:
  hero:
    id: hero
    name: Hero
    description: A brave adventurer
    backstory: "A brave adventurer for testing"
    motive: "Defeat evil and test the system"
    tags: ["test"]
    properties:
      level: 1
      health: 100

# Players for testing
players:
  - name: "TestPlayer"
    provider: "mock"
    model: "mock-model"

